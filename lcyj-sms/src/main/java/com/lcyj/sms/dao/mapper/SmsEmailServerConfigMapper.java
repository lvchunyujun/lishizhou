package com.lcyj.sms.dao.mapper;

import com.lcyj.sms.model.SmsEmailServerConfig;
import com.lcyj.sms.model.SmsEmailServerConfigExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface SmsEmailServerConfigMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @SelectProvider(type=SmsEmailServerConfigSqlProvider.class, method="countByExample")
    int countByExample(SmsEmailServerConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @DeleteProvider(type=SmsEmailServerConfigSqlProvider.class, method="deleteByExample")
    int deleteByExample(SmsEmailServerConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Delete({
        "delete from sms_email_server_config",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Insert({
        "insert into sms_email_server_config (id, serverProvider, ",
        "protocol, address, ",
        "port, description)",
        "values (#{id,jdbcType=INTEGER}, #{serverProvider,jdbcType=VARCHAR}, ",
        "#{protocol,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{port,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})"
    })
    int insert(SmsEmailServerConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @InsertProvider(type=SmsEmailServerConfigSqlProvider.class, method="insertSelective")
    int insertSelective(SmsEmailServerConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @SelectProvider(type=SmsEmailServerConfigSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="serverProvider", property="serverProvider", jdbcType=JdbcType.VARCHAR),
        @Result(column="protocol", property="protocol", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="port", property="port", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    List<SmsEmailServerConfig> selectByExample(SmsEmailServerConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Select({
        "select",
        "id, serverProvider, protocol, address, port, description",
        "from sms_email_server_config",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="serverProvider", property="serverProvider", jdbcType=JdbcType.VARCHAR),
        @Result(column="protocol", property="protocol", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="port", property="port", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    SmsEmailServerConfig selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsEmailServerConfigSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SmsEmailServerConfig record, @Param("example") SmsEmailServerConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsEmailServerConfigSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SmsEmailServerConfig record, @Param("example") SmsEmailServerConfigExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsEmailServerConfigSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SmsEmailServerConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_email_server_config
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Update({
        "update sms_email_server_config",
        "set serverProvider = #{serverProvider,jdbcType=VARCHAR},",
          "protocol = #{protocol,jdbcType=VARCHAR},",
          "address = #{address,jdbcType=VARCHAR},",
          "port = #{port,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SmsEmailServerConfig record);
}