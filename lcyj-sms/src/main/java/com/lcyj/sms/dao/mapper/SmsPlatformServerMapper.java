package com.lcyj.sms.dao.mapper;

import com.lcyj.sms.model.SmsPlatformServer;
import com.lcyj.sms.model.SmsPlatformServerExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface SmsPlatformServerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @SelectProvider(type=SmsPlatformServerSqlProvider.class, method="countByExample")
    int countByExample(SmsPlatformServerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @DeleteProvider(type=SmsPlatformServerSqlProvider.class, method="deleteByExample")
    int deleteByExample(SmsPlatformServerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Delete({
        "delete from sms_platform_server",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Insert({
        "insert into sms_platform_server (id, platformId, ",
        "serverId, platformName, ",
        "serverName, serverIp, ",
        "serverUrl, description)",
        "values (#{id,jdbcType=INTEGER}, #{platformId,jdbcType=VARCHAR}, ",
        "#{serverId,jdbcType=VARCHAR}, #{platformName,jdbcType=VARCHAR}, ",
        "#{serverName,jdbcType=VARCHAR}, #{serverIp,jdbcType=VARCHAR}, ",
        "#{serverUrl,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})"
    })
    int insert(SmsPlatformServer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @InsertProvider(type=SmsPlatformServerSqlProvider.class, method="insertSelective")
    int insertSelective(SmsPlatformServer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @SelectProvider(type=SmsPlatformServerSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="platformId", property="platformId", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverId", property="serverId", jdbcType=JdbcType.VARCHAR),
        @Result(column="platformName", property="platformName", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverName", property="serverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverIp", property="serverIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverUrl", property="serverUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    List<SmsPlatformServer> selectByExample(SmsPlatformServerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Select({
        "select",
        "id, platformId, serverId, platformName, serverName, serverIp, serverUrl, description",
        "from sms_platform_server",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="platformId", property="platformId", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverId", property="serverId", jdbcType=JdbcType.VARCHAR),
        @Result(column="platformName", property="platformName", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverName", property="serverName", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverIp", property="serverIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverUrl", property="serverUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    SmsPlatformServer selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsPlatformServerSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SmsPlatformServer record, @Param("example") SmsPlatformServerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsPlatformServerSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SmsPlatformServer record, @Param("example") SmsPlatformServerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsPlatformServerSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SmsPlatformServer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_platform_server
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Update({
        "update sms_platform_server",
        "set platformId = #{platformId,jdbcType=VARCHAR},",
          "serverId = #{serverId,jdbcType=VARCHAR},",
          "platformName = #{platformName,jdbcType=VARCHAR},",
          "serverName = #{serverName,jdbcType=VARCHAR},",
          "serverIp = #{serverIp,jdbcType=VARCHAR},",
          "serverUrl = #{serverUrl,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SmsPlatformServer record);
}