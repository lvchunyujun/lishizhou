package com.lcyj.sms.dao.mapper;

import com.lcyj.sms.model.SmsUserinfoBlacklists;
import com.lcyj.sms.model.SmsUserinfoBlacklistsExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface SmsUserinfoBlacklistsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @SelectProvider(type=SmsUserinfoBlacklistsSqlProvider.class, method="countByExample")
    int countByExample(SmsUserinfoBlacklistsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @DeleteProvider(type=SmsUserinfoBlacklistsSqlProvider.class, method="deleteByExample")
    int deleteByExample(SmsUserinfoBlacklistsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Delete({
        "delete from sms_userinfo_blacklists",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Insert({
        "insert into sms_userinfo_blacklists (id, smsUserId, ",
        "userName, startDateTime, ",
        "endDateTime, limitType, ",
        "createTime, description, ",
        "plantformId, serverId)",
        "values (#{id,jdbcType=INTEGER}, #{smsUserId,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{startDateTime,jdbcType=TIMESTAMP}, ",
        "#{endDateTime,jdbcType=TIMESTAMP}, #{limitType,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, ",
        "#{plantformId,jdbcType=VARCHAR}, #{serverId,jdbcType=VARCHAR})"
    })
    int insert(SmsUserinfoBlacklists record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @InsertProvider(type=SmsUserinfoBlacklistsSqlProvider.class, method="insertSelective")
    int insertSelective(SmsUserinfoBlacklists record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @SelectProvider(type=SmsUserinfoBlacklistsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="smsUserId", property="smsUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="userName", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="startDateTime", property="startDateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="endDateTime", property="endDateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="limitType", property="limitType", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="plantformId", property="plantformId", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverId", property="serverId", jdbcType=JdbcType.VARCHAR)
    })
    List<SmsUserinfoBlacklists> selectByExample(SmsUserinfoBlacklistsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Select({
        "select",
        "id, smsUserId, userName, startDateTime, endDateTime, limitType, createTime, ",
        "description, plantformId, serverId",
        "from sms_userinfo_blacklists",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="smsUserId", property="smsUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="userName", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="startDateTime", property="startDateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="endDateTime", property="endDateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="limitType", property="limitType", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="plantformId", property="plantformId", jdbcType=JdbcType.VARCHAR),
        @Result(column="serverId", property="serverId", jdbcType=JdbcType.VARCHAR)
    })
    SmsUserinfoBlacklists selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsUserinfoBlacklistsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SmsUserinfoBlacklists record, @Param("example") SmsUserinfoBlacklistsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsUserinfoBlacklistsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SmsUserinfoBlacklists record, @Param("example") SmsUserinfoBlacklistsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @UpdateProvider(type=SmsUserinfoBlacklistsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SmsUserinfoBlacklists record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo_blacklists
     *
     * @mbggenerated Sat Feb 29 10:46:03 CST 2020
     */
    @Update({
        "update sms_userinfo_blacklists",
        "set smsUserId = #{smsUserId,jdbcType=VARCHAR},",
          "userName = #{userName,jdbcType=VARCHAR},",
          "startDateTime = #{startDateTime,jdbcType=TIMESTAMP},",
          "endDateTime = #{endDateTime,jdbcType=TIMESTAMP},",
          "limitType = #{limitType,jdbcType=VARCHAR},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "description = #{description,jdbcType=VARCHAR},",
          "plantformId = #{plantformId,jdbcType=VARCHAR},",
          "serverId = #{serverId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SmsUserinfoBlacklists record);
}